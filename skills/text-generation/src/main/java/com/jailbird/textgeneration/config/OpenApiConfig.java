package com.jailbird.textgeneration.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.Operation;
import io.swagger.v3.oas.models.PathItem;
import io.swagger.v3.oas.models.media.Content;
import io.swagger.v3.oas.models.media.MediaType;
import io.swagger.v3.oas.models.media.Schema;
import io.swagger.v3.oas.models.parameters.RequestBody;
import io.swagger.v3.oas.models.responses.ApiResponse;
import io.swagger.v3.oas.models.responses.ApiResponses;
import org.springdoc.core.customizers.OpenApiCustomizer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

/**
 * OpenAPI configuration for TRUE auto-generated REST endpoints from protobuf.
 * 
 * This configuration documents the WebFlux RouterFunction endpoints that are
 * automatically generated by protoc-gen-spring-webflux from our .proto file.
 * 
 * The API paths and operations match exactly what's defined in the 
 * google.api.http annotations in text_generation.proto.
 */
@Configuration
public class OpenApiConfig {

    @Bean
    public OpenAPI textGenerationOpenAPI() {
        return new OpenAPI()
                .info(new Info()
                        .title("Jailbird Text Generation API")
                        .description("TRUE auto-generated REST API from protobuf definitions. " +
                                   "Endpoints are generated at build-time by protoc-gen-spring-webflux " +
                                   "from google.api.http annotations in text_generation.proto. " +
                                   "Changes to proto file automatically update REST endpoints.")
                        .version("1.0.0")
                        .contact(new Contact()
                                .name("Jailbird API Team")
                                .url("https://github.com/jailbird/api")
                                .email("api@jailbird.dev")))
                .servers(List.of(
                        new Server()
                                .url("http://172.22.53.175:8080")
                                .description("WSL Development server (accessible from Windows)"),
                        new Server()
                                .url("http://localhost:8080")
                                .description("Development server")));
    }

    /**
     * Customizes the OpenAPI spec to document the auto-generated WebFlux RouterFunction endpoints.
     * 
     * These endpoints are generated from the google.api.http annotations in text_generation.proto:
     * - POST /api/v1/text-generation/generate
     * - POST /api/v1/text-generation/generate-stream
     * - GET /api/v1/text-generation/health
     * - GET /api/v1/text-generation/models (TEST ENDPOINT for proto-first workflow)
     */
    @Bean
    public OpenApiCustomizer protoGeneratedEndpointsCustomizer() {
        return openApi -> {
            // Add health endpoint - generated from proto
            openApi.path("/api/v1/text-generation/health", new PathItem()
                    .get(new Operation()
                            .tags(List.of("Proto-Generated Text Generation"))
                            .summary("Service health check")
                            .description("Auto-generated from protobuf: TextGenerationService.Health\n" +
                                       "Proto annotation: option (google.api.http) = { get: \"/api/v1/text-generation/health\" };")
                            .responses(new ApiResponses()
                                    .addApiResponse("200", new ApiResponse()
                                            .description("Service is healthy")
                                            .content(new Content()
                                                    .addMediaType("application/json", new MediaType()
                                                            .schema(new Schema<>().type("object"))
                                                            .example("""
                                                                    {
                                                                      "status": "SERVING",
                                                                      "message": "Text Generation Service is healthy",
                                                                      "timestamp": "1752923997400",
                                                                      "metadata": {
                                                                        "service": "text-generation",
                                                                        "version": "1.0.0"
                                                                      }
                                                                    }
                                                                    """)))))));
            
            // Add text generation endpoint - generated from proto
            openApi.path("/api/v1/text-generation/generate", new PathItem()
                    .post(new Operation()
                            .tags(List.of("Proto-Generated Text Generation"))
                            .summary("Generate text from prompt")
                            .description("Auto-generated from protobuf: TextGenerationService.GenerateText\n" +
                                       "Proto annotation: option (google.api.http) = { post: \"/api/v1/text-generation/generate\" body: \"*\" };")
                            .requestBody(new RequestBody()
                                    .required(true)
                                    .content(new Content()
                                            .addMediaType("application/json", new MediaType()
                                                    .schema(new Schema<>().type("object"))
                                                    .example("""
                                                            {
                                                              "prompt": "Hello, how are you?",
                                                              "context": {
                                                                "persona": {
                                                                  "personaId": "default",
                                                                  "name": "Jailbird"
                                                                }
                                                              }
                                                            }
                                                            """))))
                            .responses(new ApiResponses()
                                    .addApiResponse("200", new ApiResponse()
                                            .description("Generated text response")
                                            .content(new Content()
                                                    .addMediaType("application/json", new MediaType()
                                                            .schema(new Schema<>().type("object"))
                                                            .example("""
                                                                    {
                                                                      "generatedText": "Hello! I'm Jailbird, nice to meet you!",
                                                                      "metadata": {
                                                                        "modelName": "mock-model",
                                                                        "inputTokens": 4,
                                                                        "outputTokens": 8,
                                                                        "finishReason": "stop"
                                                                      },
                                                                      "isFinal": true
                                                                    }
                                                                    """)))))));
            
            // Add streaming endpoint - generated from proto
            openApi.path("/api/v1/text-generation/generate-stream", new PathItem()
                    .post(new Operation()
                            .tags(List.of("Proto-Generated Text Generation"))
                            .summary("Generate streaming text from prompt")
                            .description("Auto-generated from protobuf: TextGenerationService.GenerateTextStream\n" +
                                       "Proto annotation: option (google.api.http) = { post: \"/api/v1/text-generation/generate-stream\" body: \"*\" };")
                            .requestBody(new RequestBody()
                                    .required(true)
                                    .content(new Content()
                                            .addMediaType("application/json", new MediaType()
                                                    .schema(new Schema<>().type("object"))
                                                    .example("""
                                                            {
                                                              "prompt": "Count to 5",
                                                              "context": {
                                                                "persona": {
                                                                  "personaId": "default",
                                                                  "name": "Jailbird"
                                                                }
                                                              }
                                                            }
                                                            """))))
                            .responses(new ApiResponses()
                                    .addApiResponse("200", new ApiResponse()
                                            .description("Server-sent events stream of text generation")
                                            .content(new Content()
                                                    .addMediaType("text/event-stream", new MediaType()
                                                            .schema(new Schema<>().type("string"))
                                                            .example("""
                                                                    data: {"generatedText": "Hello!", "isFinal": false, "tokenCount": 1}
                                                                    
                                                                    data: {"generatedText": "Hello! I'm", "isFinal": false, "tokenCount": 2}
                                                                    
                                                                    data: {"generatedText": "Hello! I'm Jailbird", "isFinal": true, "tokenCount": 3}
                                                                    """)))))));
                                                                    
            // Add models endpoint - TEST ENDPOINT for proto-first workflow verification
            openApi.path("/api/v1/text-generation/models", new PathItem()
                    .get(new Operation()
                            .tags(List.of("Proto-Generated Text Generation"))
                            .summary("Get available models - TEST ENDPOINT")
                            .description("Auto-generated from protobuf: TextGenerationService.GetModels\\n" +
                                       "Proto annotation: option (google.api.http) = { get: \\\"/api/v1/text-generation/models\\\" };\\n" +
                                       "This endpoint was added to test proto-first workflow - changes to proto automatically update REST endpoints!")
                            .responses(new ApiResponses()
                                    .addApiResponse("200", new ApiResponse()
                                            .description("List of available models")
                                            .content(new Content()
                                                    .addMediaType("application/json", new MediaType()
                                                            .schema(new Schema<>().type("object"))
                                                            .example("""
                                                                    {
                                                                      "models": [
                                                                        {
                                                                          "modelId": "mock-model-v1",
                                                                          "displayName": "Mock Model v1",
                                                                          "description": "A mock text generation model for testing",
                                                                          "isAvailable": true,
                                                                          "capabilities": {
                                                                            "maxTokens": "4096",
                                                                            "streaming": "true",
                                                                            "temperature": "0.0-2.0"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                    """)))))));
        };
    }
}